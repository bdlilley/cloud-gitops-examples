---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-gloo-crds
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  source:
    chart: gloo-platform-crds
    repoURL:  https://storage.googleapis.com/gloo-platform/helm-charts
    targetRevision: v2.4.0-rc1
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-gloo-platform
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
  source:
    chart: gloo-platform
    repoURL:  https://storage.googleapis.com/gloo-platform/helm-charts
    targetRevision: v2.4.0-rc1
    helm:
      values: |
        global:
          common:
            cluster: template-default
        common:
          cluster: template-default
        demo:
          manageAddonNamespace: true
        extAuthService:
          enabled: false
        licensing:
          licenseSecretName: gloo-platform-license
        
        glooAgent:
          enabled: true
          relay:
            serverAddress: "gloo-mesh-mgmt-server.gloo-mesh:9900"
            clientTlsSecret:
              name: template-default-tls
            tokenSecret:
              key: null
              name: null
              namespace: null
        
        glooMgmtServer:
          enabled: true
          relay:
            disableCa: true
            disableCaCertGeneration: true
            disableTokenGeneration: true
            pushRbac: true
            tlsSecret:
              name: mgmt-server-tls
          serviceOverrides:
            metadata:
              annotations:
                external-dns.alpha.kubernetes.io/hostname: mgmt.template.vpc
                # external-dns.alpha.kubernetes.io/aws-failover: PRIMARY
                # external-dns.alpha.kubernetes.io/set-identifier: us-east-1
                external-dns.alpha.kubernetes.io/alias: "true"
                external-dns.alpha.kubernetes.io/aws-health-check-id: 00000000-0000-0000-0000-000000000000
                service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
                service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
                service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
                service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
                service.beta.kubernetes.io/aws-load-balancer-scheme: internal
                service.beta.kubernetes.io/aws-load-balancer-type: external
        glooUi:
          enabled: true
        istioInstallations:
          enabled: false
        legacyMetricsPipeline:
          enabled: false
        prometheus:
          enabled: true
          server:
            service:
              type: LoadBalancer
              annotations:
                external-dns.alpha.kubernetes.io/hostname: prometheus.template.vpc
                external-dns.alpha.kubernetes.io/alias: "true"
                service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
                service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
                service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
                service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
                service.beta.kubernetes.io/aws-load-balancer-scheme: internal
                service.beta.kubernetes.io/aws-load-balancer-type: external
        telemetryCollector:
          config:
            exporters:
              otlp:
                endpoint: gloo-telemetry-gateway.gloo-mesh:4317
          enabled: true
        telemetryGateway:
          enabled: true
          service:
            annotations:
              external-dns.alpha.kubernetes.io/hostname: otel.template.vpc
              external-dns.alpha.kubernetes.io/alias: "true"
              service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
              service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
              service.beta.kubernetes.io/aws-load-balancer-scheme: internal
              service.beta.kubernetes.io/aws-load-balancer-type: external
            type: LoadBalancer


---
apiVersion: admin.gloo.solo.io/v2
kind: KubernetesCluster
metadata:
  name:  template-default
  namespace: gloo-mesh
spec:
  clusterDomain: cluster.local
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: mgmt-server
  namespace: gloo-mesh
spec:
  secretName: mgmt-server-tls
  duration: 2160h0m0s
  renewBefore: 360h0m0s
  subject:
    organizations:
      - gloo-mesh-mgmt-server
  commonName: gloo-mesh-mgmt-server
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth
  dnsNames:
    - "*.gloo-mesh"
    - "*.vpc"
    - "*.example.com"
    - "*.elb.us-east-1.amazonaws.com"
    - "*.elb.us-west-1.amazonaws.com"
  issuerRef:
    name: root-ca
    kind: Issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: template-default
  namespace: gloo-mesh
spec:
  secretName: template-default-tls
  duration: 2160h0m0s
  renewBefore: 360h0m0s
  subject:
    organizations:
      - gloo-mesh-mgmt-server-ca
  commonName: gloo-mesh-mgmt-server-ca
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth
  dnsNames:
    - template-default
  issuerRef:
    name: root-ca
    kind: Issuer
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-gloo-mgmt
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  source:
    repoURL: https://github.com/bdlilley/cloud-gitops-examples.git
    path: argocd/common-mgmt-server
    targetRevision: main
    directory:
      recurse: true
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh



---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: default
  namespace: gloo-mesh
  labels:
    gloo.solo.io/team: 'platform'
spec:
  workloadClusters:
  - name: '*'
    namespaces:
    - name: "*"
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: default
  namespace: gloo-mesh
spec:
  options:
    serviceIsolation:     
      enabled: false
    federation:
      enabled: false
      serviceSelector:
      - {}
    eastWestGateways:
    - selector:
        labels:
          istio: eastwestgateway
