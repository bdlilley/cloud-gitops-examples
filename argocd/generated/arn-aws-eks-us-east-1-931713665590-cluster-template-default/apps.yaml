
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-aws-lb
  namespace: argocd
  labels:
    solo.io/infra: aws-load-balancer
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://aws.github.io/eks-charts
    targetRevision: "1.4.5"
    chart: aws-load-balancer-controller
    helm:
      values: |
        replicaCount: 1
        clusterName: template-default
        serviceAccount:
          create: true
          name: aws-load-balancer-controller
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::931713665590:role/template-default-aws-lb-controller
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system  
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-ext-secrets
  namespace: argocd
  labels:
    solo.io/infra: external-secrets
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://charts.external-secrets.io
    targetRevision: "0.7.2"
    chart: external-secrets
    helm:
      values: |
        serviceAccount:
          create: true
          name: external-secrets
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::931713665590:role/template-default-ext-secrets
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system  
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-cert-manager
  namespace: argocd
  labels:
    solo.io/infra: cert-manager
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: v1.9.1
    chart: cert-manager
    helm:
      values: |
        installCRDs: true
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system  
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-external-dns
  namespace: argocd
  labels:
    solo.io/infra: external-dns
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/kubernetes-sigs/external-dns
    targetRevision: v0.13.5
    path: charts/external-dns
    helm:
      values: |
        serviceAccount:
          name: external-dns
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::931713665590:role/template-default-ext-dns
        sources:
        - service
        provider: aws
        registry: txt
        txtPrefix: template-default
        txtOwnerId: external-dns-template-default
        domainFilters:
        - template.vpc
        extraArgs: 
        - --aws-zone-type=private
        env:
        - name: AWS_DEFAULT_REGION
          value: us-east-1
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-gloo-crds
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  source:
    chart: gloo-platform-crds
    repoURL:  https://storage.googleapis.com/gloo-platform/helm-charts
    targetRevision: v2.4.0-rc1
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-gloo-mgmt
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  source:
    repoURL: https://github.com/bdlilley/cloud-gitops-examples.git
    path: argocd/common-mgmt-server
    targetRevision: main
    directory:
      recurse: true
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
--- 
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: template-default-gloo-platform
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: https://kubernetes.default.svc
    namespace: gloo-mesh
  source:
    chart: gloo-platform
    repoURL:  https://storage.googleapis.com/gloo-platform/helm-charts
    targetRevision: v2.4.0-rc1
    helm:
      values: |
        global:
          common:
            cluster: template-default
        common:
          cluster: template-default
        demo:
          manageAddonNamespace: true
        extAuthService:
          enabled: false
        licensing:
          licenseSecretName: gloo-platform-license
        glooMgmtServer:
          enabled: true
          relay:
            disableCa: true
            disableCaCertGeneration: true
            disableTokenGeneration: true
            pushRbac: true
            tlsSecret:
              name: relay-server-tls-secret
          serviceOverrides:
            metadata:
              annotations:
                external-dns.alpha.kubernetes.io/hostname: mgmt.template.vpc
                # external-dns.alpha.kubernetes.io/aws-failover: PRIMARY
                # external-dns.alpha.kubernetes.io/set-identifier: map[sensitive:false type:string value:us-east-1]
                external-dns.alpha.kubernetes.io/alias: "true"
                external-dns.alpha.kubernetes.io/aws-health-check-id: 00000000-0000-0000-0000-000000000000
                service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
                service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
                service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
                service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
                service.beta.kubernetes.io/aws-load-balancer-scheme: internal
                service.beta.kubernetes.io/aws-load-balancer-type: external
        glooUi:
          enabled: true
        istioInstallations:
          enabled: false
        legacyMetricsPipeline:
          enabled: false
        prometheus:
          enabled: true
          server:
            service:
              type: LoadBalancer
              annotations:
                external-dns.alpha.kubernetes.io/hostname: prometheus.template.vpc
                external-dns.alpha.kubernetes.io/alias: "true"
                service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
                service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
                service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
                service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
                service.beta.kubernetes.io/aws-load-balancer-scheme: internal
                service.beta.kubernetes.io/aws-load-balancer-type: external
        telemetryCollector:
          config:
            exporters:
              otlp:
                endpoint: gloo-telemetry-gateway.gloo-mesh:4317
          enabled: true
        telemetryGateway:
          enabled: true
          service:
            annotations:
              external-dns.alpha.kubernetes.io/hostname: otel.template.vpc
              external-dns.alpha.kubernetes.io/alias: "true"
              service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=false
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
              service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
              service.beta.kubernetes.io/aws-load-balancer-scheme: internal
              service.beta.kubernetes.io/aws-load-balancer-type: external
            type: LoadBalancer
