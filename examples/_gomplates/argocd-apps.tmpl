
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ (ds "tf").eks.value.eks.id }}-aws-lb
  namespace: argocd
  labels:
    solo.io/infra: aws-load-balancer
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://aws.github.io/eks-charts
    targetRevision: "1.4.5"
    chart: aws-load-balancer-controller
    helm:
      values: |
        replicaCount: 1
        clusterName: {{ (ds "tf").eks.value.eks.id }}
        serviceAccount:
          create: true
          name: aws-load-balancer-controller
          annotations:
            eks.amazonaws.com/role-arn: {{ index (ds "tf").eks.value.irsa "aws-lb-controller" }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: {{ (index (ds "tf") "argocd-destination-server").value }}
    namespace: kube-system  
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ (ds "tf").eks.value.eks.id }}-ext-secrets
  namespace: argocd
  labels:
    solo.io/infra: external-secrets
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://charts.external-secrets.io
    targetRevision: "0.7.2"
    chart: external-secrets
    helm:
      values: |
        serviceAccount:
          create: true
          name: external-secrets
          annotations:
            eks.amazonaws.com/role-arn: {{ index (ds "tf").eks.value.irsa "ext-secrets" }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: {{ (index (ds "tf") "argocd-destination-server").value }}
    namespace: kube-system  
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ (ds "tf").eks.value.eks.id }}-cert-manager
  namespace: argocd
  labels:
    solo.io/infra: cert-manager
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: v1.9.1
    chart: cert-manager
    helm:
      values: |
        installCRDs: true
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: {{ (index (ds "tf") "argocd-destination-server").value }}
    namespace: kube-system  
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ (ds "tf").eks.value.eks.id }}-external-dns
  namespace: argocd
  labels:
    solo.io/infra: external-dns
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/kubernetes-sigs/external-dns
    targetRevision: v0.13.5
    path: charts/external-dns
    helm:
      values: |
        serviceAccount:
          name: external-dns
          annotations:
            eks.amazonaws.com/role-arn: {{ index (ds "tf").eks.value.irsa "ext-dns" }}
        sources:
        - service
        provider: aws
        registry: txt
        txtPrefix: {{ (ds "tf").eks.value.eks.id }}
        txtOwnerId: external-dns-{{ (ds "tf").eks.value.eks.id }}
        domainFilters:
        - {{ (ds "tf").privateHzName.value }}
        extraArgs: 
        - --aws-zone-type=private
        env:
        - name: AWS_DEFAULT_REGION
          value: {{ (ds "tf").region.value }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=false
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: {{ (index (ds "tf") "argocd-destination-server").value }}
    namespace: kube-system
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ (ds "tf").eks.value.eks.id }}-gloo-crds
  namespace: argocd
  labels:
    solo.io/gloo-component: gloo-platform
spec:
  project: default
  source:
    chart: gloo-platform-crds
    repoURL:  {{ (ds "env").gloo.repo }}
    targetRevision: {{ (ds "env").gloo.version }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true 
    syncOptions:
    - CreateNamespace=true
    retry:
      limit: 10
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
  destination:
    server: {{ (index (ds "tf") "argocd-destination-server").value }}
    namespace: gloo-mesh